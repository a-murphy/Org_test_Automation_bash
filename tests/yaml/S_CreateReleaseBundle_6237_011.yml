resources:
  - name: S_CreateReleaseBundle_6237_011_BuildInfo_2
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: 'name'
      buildNumber: '1'

  - name: S_CreateReleaseBundle_6237_011_ReleaseBundle_2
    type: ReleaseBundle
    configuration:
      sourceDistribution: s_distribution
      name: name
      version: '1'

pipelines:
  - name: pipeline_S_CreateReleaseBundle_6237_011_2
    configuration:
      environmentVariables:
        readOnly:
          JFROG_CLI_BUILD_NUMBER: "${run_id}"
    steps:
      - name: S_CreateReleaseBundle_6237_011_ReleaseBundle_1
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          outputResources:
            - name: S_CreateReleaseBundle_6237_011_BuildInfo_2
        execution:
          onExecute:
            - echo "${run_id}" > S_CreateReleaseBundle_6237_011_${run_id}.txt
            - jfrog rt upload S_CreateReleaseBundle_6237_011_${run_id}.txt test-automation-generic-local --insecure-tls=$no_verify_ssl
            - jfrog rt build-publish ${JFROG_CLI_BUILD_NAME} ${JFROG_CLI_BUILD_NUMBER} --insecure-tls=$no_verify_ssl
            - write_output S_CreateReleaseBundle_6237_011_BuildInfo_2 buildName=${JFROG_CLI_BUILD_NAME} buildNumber=${JFROG_CLI_BUILD_NUMBER}

      - name: S_CreateReleaseBundle_6237_011_2
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: ${JFROG_CLI_BUILD_NAME}
          releaseBundleVersion: ${run_id}
          dryRun: false
          sign: true
          inputResources:
            - name: S_CreateReleaseBundle_6237_011_BuildInfo_2
          outputResources:
            - name: S_CreateReleaseBundle_6237_011_ReleaseBundle_2
        execution:
          onStart:
            - export JFROG_CLI_LOG_LEVEL=DEBUG

      - name: S_CreateReleaseBundle_6237_011_2_2
        type: Bash
        configuration:
          inputSteps:
            - name: S_CreateReleaseBundle_6237_011_ReleaseBundle_1
          integrations:
            - name: s_artifactory
            - name: s_distribution
        execution:
          onExecute:
            - releaseBundleName=${JFROG_CLI_BUILD_NAME}
            - releaseBundleVersion=${run_id}
            - jfrog config add distribution --overwrite --insecure-tls=$no_verify_ssl --dist-url $int_s_distribution_url --artifactory-url $int_s_artifactory_url --user $int_s_distribution_user --apikey $int_s_distribution_apikey --interactive=false
            - jfrog config use distribution
            - 'echo "{\"files\": [{\"aql\": {\"items.find\": {\"\$and\": [{\"@build.name\": {\"\$eq\": \"${JFROG_CLI_BUILD_NAME}\"}},{\"@build.number\": {\"\$eq\": \"${run_id}\"}}]}}}]}" > filespec'
            - cat filespec
            - export JFROG_CLI_LOG_LEVEL=DEBUG
            - jfrog rt release-bundle-create ${JFROG_CLI_BUILD_NAME} ${run_id} --dry-run=false --passphrase="$int_s_distribution_signingKeyPassphrase" --spec=filespec --sign=true --detailed-summary
            - "curl -sS -H \"Authorization: apiToken $builder_api_token\" -H 'Content-Type: application/json' \"${pipelines_api_url}/pipeinfo/verify?artifactType=releaseBundle&rbName=${releaseBundleName}&rbVersion=${releaseBundleVersion}\""
            - echo "Deleting release bundle..."
            - jfrog rt release-bundle-delete --delete-from-dist=true --insecure-tls=$no_verify_ssl $releaseBundleName $releaseBundleVersion
            - jfrog config remove distribution
            - echo "Checking resources..."
            - stepArtifactSha=$(echo $stepArtifact | jq -r '.artifactSha')
            - if [ "$stepArtifactSha" != "$artifactSha" ]; then return 1; fi

      - name: S_CreateReleaseBundle_6237_011_3
        type: Bash
        configuration:
          inputSteps:
            - name: S_CreateReleaseBundle_6237_011_2_2
          inputResources:
            - name: S_CreateReleaseBundle_6237_011_ReleaseBundle_2
          integrations:
            - name: s_artifactory
            - name: s_distribution
        execution:
          onExecute:
            - releaseBundleName=$(find_resource_variable S_CreateReleaseBundle_6237_011_ReleaseBundle_2 name)
            - releaseBundleVersion=$(find_resource_variable S_CreateReleaseBundle_6237_011_ReleaseBundle_2 version)
            - curlOptions="--silent --retry 3 -w %{http_code} -u $int_s_distribution_user:$int_s_distribution_apikey"
            - if [ "$no_verify_ssl" == "true" ]; then curlOptions+=" --insecure"; fi
            - "curl $curlOptions -H 'Content-Type: application/json' -XGET -L \"$int_s_distribution_url/api/v1/release_bundle/$releaseBundleName/$releaseBundleVersion\" --output $step_tmp_dir/response --dump-header $step_tmp_dir/response_header"
            - "curl $curlOptions -H 'Content-Type: application/json' -XGET -L \"$int_s_distribution_url/api/v1/system/info\""
            - cat $step_tmp_dir/response_header
            - cat $step_tmp_dir/response
            - "artifactSha=$(cat $step_tmp_dir/response_header | grep 'X-Checksum-Sha256: ' | awk '{print $2}' | tr -d '[:space:]')"
            - echo $artifactSha
            - artifactPath="${releaseBundleName}/${releaseBundleVersion}"
            - echo $artifactPath
            - "stepArtifact=$(curl -sS -H \"Authorization: apiToken $builder_api_token\" -H 'Content-Type: application/json' \"${pipelines_api_url}/stepArtifacts?artifactPath=${artifactPath}&artifactSha=${artifactSha}&artifactType=releaseBundle\")"
            - "curl -sS -H \"Authorization: apiToken $builder_api_token\" -H 'Content-Type: application/json' \"${pipelines_api_url}/pipeinfo/verify?artifactType=releaseBundle&rbName=${releaseBundleName}&rbVersion=${releaseBundleVersion}\""
            - echo $stepArtifact
            - echo "Deleting release bundle..."
            - jfrog config add distribution --overwrite --insecure-tls=$no_verify_ssl --dist-url $int_s_distribution_url --user $int_s_distribution_user --apikey $int_s_distribution_apikey --interactive=false
            - jfrog config use distribution
            - jfrog rt release-bundle-delete --delete-from-dist=true --insecure-tls=$no_verify_ssl $releaseBundleName $releaseBundleVersion
            - jfrog config remove distribution
            - echo "Checking resources..."
            - stepArtifactSha=$(echo $stepArtifact | jq -r '.artifactSha')
            - if [ "$stepArtifactSha" != "$artifactSha" ]; then return 1; fi
