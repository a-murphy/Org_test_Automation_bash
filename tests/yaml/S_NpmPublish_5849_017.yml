template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_NpmPublish_5849_017_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_bash.path }}
      branches:
        include: {{gitBranch}}
  - name: S_NpmPublish_5849_017_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory

pipelines:
  - name: pipeline_S_NpmPublish_5849_017
    configuration:
      environmentVariables:
        readOnly:
          JFROG_CLI_BUILD_NUMBER: ${run_id}
    steps:
      - name: S_NpmPublish_5849_017_1
        type: NpmBuild
        configuration:
          sourceLocation: "tests/npm"
          resolverRepo: "test-automation-npm-remote"
          inputResources:
            - name: S_NpmPublish_5849_017_GitRepo
          integrations:
            - name: s_artifactory
      - name: S_NpmPublish_5849_017_2
        type: NpmPublish
        configuration:
          autoPublishBuildInfo: true
          deployerRepo: "test-automation-npm-local"
          inputSteps:
            - name: S_NpmPublish_5849_017_1
          outputResources:
            - name: S_NpmPublish_5849_017_BuildInfo
          integrations:
            - name: s_artifactory
      - name: S_NpmPublish_5849_017_3
        type: Bash
        configuration:
          inputSteps:
            - name: S_NpmPublish_5849_017_2
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - buildInfo=$(jfrog rt curl -XGET "/api/build/${JFROG_CLI_BUILD_NAME}/${run_id}" | jq -r .buildInfo)
            - artifact=$(echo $buildInfo | jq '.modules[]  | select(.id == "npm-example:0.0.1") | .artifacts[0]')
            - artifactPath=$(echo $artifact | jq -r '.path')
            - artifactSha=$(echo $artifact | jq -r '.sha256')
            - "stepArtifact=$(curl -sS -H \"Authorization: apiToken $builder_api_token\" -H 'Content-Type: application/json' \"${pipelines_api_url}/stepArtifacts?artifactPath=${artifactPath}&artifactSha=${artifactSha}&artifactType=artifact\")"
            - jfrog rt curl -XDELETE "/api/build/${JFROG_CLI_BUILD_NAME}?buildNumbers=${run_id}&artifacts=1"
            - stepArtifactSha=$(echo $stepArtifact | jq -r '.artifactSha')
            - if [ "$stepArtifactSha" != "$artifactSha" ]; then return 1; fi
