resources:
  - name: S_PublishBuildInfo_5849_001_output
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory

pipelines:
  - name: pipeline_S_PublishBuildInfo_5849_001
    configuration:
      environmentVariables:
        readOnly:
          JFROG_CLI_BUILD_NUMBER: ${run_id}
    steps:
      - name: S_PublishBuildInfo_5849_001_1
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - echo "${run_id}" > S_PublishBuildInfo_5849_001.txt
            - $jfrog_cli_path rt upload S_PublishBuildInfo_5849_001.txt test-automation-generic-local
            - add_run_variables buildName=${JFROG_CLI_BUILD_NAME} buildNumber=${JFROG_CLI_BUILD_NUMBER}
            - add_run_variables myEnvironmentVariable=${run_id}
            - $jfrog_cli_path rt build-collect-env
            - add_run_files /tmp/jfrog/. jfrog
      - name: S_PublishBuildInfo_5849_001_2
        type: PublishBuildInfo
        configuration:
          outputResources:
            - name: S_PublishBuildInfo_5849_001_output
          inputSteps:
            - name: S_PublishBuildInfo_5849_001_1
      - name: S_PublishBuildInfo_5849_001_3
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          inputResources:
            - name: S_PublishBuildInfo_5849_001_output
        execution:
          onExecute:
            - buildInfoFilePath=$(jfrog rt search "*/${JFROG_CLI_BUILD_NAME}/${run_id}*.json" | jq -r '.[0].path')
            - buildInfoFileData=$(jfrog rt curl -XGET /api/storage/${buildInfoFilePath})
            - artifactSha=$(echo $buildInfoFileData | jq -r '.checksums.sha256')
            - if [ -z "${project_key}" ]; then project="default"; else project="${project_key}"; fi
            - artifactPath="${project}/${JFROG_CLI_BUILD_NAME}/${run_id}"
            - "stepArtifact=$(curl -sS -H \"Authorization: apiToken $builder_api_token\" -H 'Content-Type: application/json' \"${pipelines_api_url}/stepArtifacts?artifactPath=${artifactPath}&artifactSha=${artifactSha}&artifactType=buildInfo\")"
            - jfrog rt curl -XDELETE "/api/build/${JFROG_CLI_BUILD_NAME}?buildNumbers=${run_id}&artifacts=1"
            - stepArtifactSha=$(echo $stepArtifact | jq -r '.artifactSha')
            - if [ "$stepArtifactSha" != "$artifactSha" ]; then return 1; fi
