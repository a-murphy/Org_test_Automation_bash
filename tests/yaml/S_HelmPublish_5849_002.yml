template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_HelmPublish_5849_002_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_bash.path }}
      branches:
        include: {{gitBranch}}
  - name: S_HelmPublish_5849_002_HelmChart
    type: HelmChart
    configuration:
      sourceArtifactory: s_artifactory
      repository: test-automation-helm-local
      version: version
      chart: chart
  - name: S_HelmPublish_5849_002_BuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory

pipelines:
  - name: pipeline_S_HelmPublish_5849_002
    configuration:
      environmentVariables:
        readOnly:
          JFROG_CLI_BUILD_NUMBER: ${run_id}
    steps:
      - name: S_HelmPublish_5849_002_1
        type: HelmPublish
        configuration:
          chartPath: "./tests/helmCharts/myChart"
          autoPublishBuildInfo: true
          inputResources:
            - name: S_HelmPublish_5849_002_GitRepo
          outputResources:
            - name: S_HelmPublish_5849_002_BuildInfo
            - name: S_HelmPublish_5849_002_HelmChart
          integrations:
            - name: s_artifactory
      - name: S_HelmPublish_5849_002_2
        type: Bash
        configuration:
          inputSteps:
            - name: S_HelmPublish_5849_002_1
          integrations:
            - name: s_artifactory
        execution:
          onExecute:
            - buildInfoFilePath=$(jfrog rt search "*/${JFROG_CLI_BUILD_NAME}/${run_id}*.json" | jq -r '.[0].path')
            - buildInfoFileData=$(jfrog rt curl -XGET /api/storage/${buildInfoFilePath})
            - artifactSha=$(echo $buildInfoFileData | jq -r '.checksums.sha256')
            - if [ -z "${project_key}" ]; then project="default"; else project="${project_key}"; fi
            - artifactPath="${project}/${JFROG_CLI_BUILD_NAME}/${run_id}"
            - "stepArtifact=$(curl -sS -H \"Authorization: apiToken $builder_api_token\" -H 'Content-Type: application/json' \"${pipelines_api_url}/stepArtifacts?artifactPath=${artifactPath}&artifactSha=${artifactSha}&artifactType=buildInfo\")"
            - jfrog rt curl -XDELETE "/api/build/${JFROG_CLI_BUILD_NAME}?buildNumbers=${run_id}&artifacts=1"
            - stepArtifactSha=$(echo $stepArtifact | jq -r '.artifactSha')
            - if [ "$stepArtifactSha" != "$artifactSha" ]; then return 1; fi
